/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a MessageSummary.
 */
class MessageSummary {
  /**
   * Create a MessageSummary.
   * @member {uuid} id
   * @member {string} [server]
   * @member {array} [rcpt]
   * @member {array} [from]
   * @member {array} [to]
   * @member {array} [cc]
   * @member {array} [bcc]
   * @member {date} [received]
   * @member {string} [subject]
   * @member {string} [summary]
   * @member {number} [attachments]
   */
  constructor() {
  }

  /**
   * Defines the metadata of MessageSummary
   *
   * @returns {object} metadata of MessageSummary
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MessageSummary',
      type: {
        name: 'Composite',
        className: 'MessageSummary',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          server: {
            required: false,
            serializedName: 'server',
            type: {
              name: 'String'
            }
          },
          rcpt: {
            required: false,
            serializedName: 'rcpt',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MessageAddressElementType',
                  type: {
                    name: 'Composite',
                    className: 'MessageAddress'
                  }
              }
            }
          },
          from: {
            required: false,
            serializedName: 'from',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MessageAddressElementType',
                  type: {
                    name: 'Composite',
                    className: 'MessageAddress'
                  }
              }
            }
          },
          to: {
            required: false,
            serializedName: 'to',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MessageAddressElementType',
                  type: {
                    name: 'Composite',
                    className: 'MessageAddress'
                  }
              }
            }
          },
          cc: {
            required: false,
            serializedName: 'cc',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MessageAddressElementType',
                  type: {
                    name: 'Composite',
                    className: 'MessageAddress'
                  }
              }
            }
          },
          bcc: {
            required: false,
            serializedName: 'bcc',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MessageAddressElementType',
                  type: {
                    name: 'Composite',
                    className: 'MessageAddress'
                  }
              }
            }
          },
          received: {
            required: false,
            serializedName: 'received',
            type: {
              name: 'DateTime'
            }
          },
          subject: {
            required: false,
            serializedName: 'subject',
            type: {
              name: 'String'
            }
          },
          summary: {
            required: false,
            serializedName: 'summary',
            type: {
              name: 'String'
            }
          },
          attachments: {
            required: false,
            serializedName: 'attachments',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = MessageSummary;
